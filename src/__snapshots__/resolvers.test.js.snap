// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should fail explicitly when a single library resources doesn't exist while fetching many 1`] = `
Array [
  [GraphQLError: The library with id 420 can't be found.],
]
`;

exports[`should fail explicitly when a single library resources doesn't exist while fetching many 2`] = `
Array [
  "http://mock.com/api/libraries",
]
`;

exports[`should fail explicitly when fetching a non-existing resource 1`] = `
Array [
  [GraphQLError: Request Failed. Status: 404 - Not Found. Body: Path not found for api/libraries/42069. Tried:
	mock/api/libraries/42069.json
	mock/api/libraries/42069/index.json],
]
`;

exports[`should fail explicitly when fetching a non-existing resource 2`] = `
Array [
  "http://mock.com/api/libraries/42069",
]
`;

exports[`should get all library names 1`] = `
Object {
  "libraries": Array [
    Object {
      "name": "My Library",
    },
    Object {
      "name": "Iron Man Suit",
    },
  ],
}
`;

exports[`should get all library names 2`] = `
Array [
  "http://mock.com/api/libraries",
]
`;

exports[`should get information about the authenticated user 1`] = `
Object {
  "me": Object {
    "id": "420",
    "name": "Sam Babic",
    "token": "TESTINGSESSION",
  },
}
`;

exports[`should get information about the authenticated user 2`] = `Array []`;

exports[`should hit the cache when getting the same library resources multiple times 1`] = `
Object {
  "libraries": Array [
    Object {
      "folders": Array [
        Object {
          "name": "Suit",
        },
      ],
      "id": "406",
      "name": "My Library",
    },
    Object {
      "folders": Array [
        Object {
          "name": "Mixtape",
        },
      ],
      "id": "1782",
      "name": "Iron Man Suit",
    },
  ],
  "library": Object {
    "folders": Array [
      Object {
        "name": "Suit",
      },
    ],
    "name": "My Library",
  },
}
`;

exports[`should hit the cache when getting the same library resources multiple times 2`] = `
Array [
  "http://mock.com/api/libraries",
  "http://mock.com/api/libraries/406/folders",
  "http://mock.com/api/libraries/1782/folders",
]
`;

exports[`should only make the required requests on complex queries 1`] = `
Object {
  "library": Object {
    "folders": Array [
      Object {
        "documents": Array [
          Object {
            "name": "Armor.cad",
          },
          Object {
            "name": "Pitch.docx",
          },
        ],
        "folders": Array [
          Object {
            "name": "Hot Rod Red",
          },
        ],
        "name": "Suit",
      },
    ],
  },
}
`;

exports[`should only make the required requests on complex queries 2`] = `
Array [
  "http://mock.com/api/libraries/406",
  "http://mock.com/api/libraries/406/folders",
  "http://mock.com/api/folders/6890?embed=f,d",
]
`;

exports[`should resolve documents 1`] = `
Object {
  "document": Object {
    "name": "Armor.cad",
  },
}
`;

exports[`should resolve documents 2`] = `
Array [
  "http://mock.com/api/documents/19749",
]
`;
